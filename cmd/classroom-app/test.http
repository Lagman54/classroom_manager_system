### Create Classroom
POST localhost:8080/api/v1/class
Content-Type: application/json

{
  "name": "GoLang application development",
  "description": "Golang class"
}

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });
%}

### Get Classroom
GET localhost:8080/api/v1/class/2

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Update classroom
PUT localhost:8080/api/v1/class/2
Content-Type: application/json

{
  "name": "Golang application dev",
  "description": "upd"
}

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Delete Classroom
DELETE localhost:8080/api/v1/class/2
Content-Type: application/json

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Create Task
POST localhost:8080/api/v1/task
Content-Type: application/json

{
  "header": "Home work 1",
  "description": "do until monday"
}

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });
%}

### Get Task
GET localhost:8080/api/v1/task/2

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Update Task
PUT localhost:8080/api/v1/task/2
Content-Type: application/json

{
  "header": "Lab2",
  "description": "Dear students, upload lab1 till next week"
}

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Delete Task
DELETE localhost:8080/api/v1/task/2

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}
